//modulo: duration of one loop
//offset: add time to all beats in 'beats'-array
//min: musictime this beat starts at
//max: musictime this beat ends at
// all values in seconds
//beats: array of array that define the rythm, each array has the following meaning
//[beatlayer, flash starts to increase, flash reached its max, flash starts to decrease, flash is back to zero, maximum flash intensity (1=100%)]

var rythms={
    'cokecity':
    [ 
       
        {
            'modulo' :2.4,
            'offset' : 6.4%2.4,
            'min': 6.8,//10.88,
            'max': 9999,
            'beats' :
            [
                [0, 0, 0.1, 0.2, 0.4, 1],
                [0, 1.2, 1.3, 1.4, 1.7, 1],
                [1, 0, 0.1, 0.2, 0.4, 1],
                [2, 1.2, 1.3, 1.4, 1.7, 1],
                [102, 0.7, 1.2, 1.2, 1.2, 1],
                [101, 1.9, 2.4, 2.4, 2.4, 1],

            ]
        },
    ],
    'jamesbond':
    [ 
       
        {
            'modulo' :1.63,
            'offset' : 4.4, //4.49
            'min': 0,//10.88,
            'max': 9999,
            'beats' :
            [
                [101, 1.13, 1.63, 1.63, 1.63, 1],
                [1, 0, 0.05, 0.1, 0.4, 1],
            ]
        },
        {
            'modulo' :0.4066,
            'offset' : 20.7,
            'min': 0,//10.88,
            'max': 9999,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.2, 1],
            ]
        }
    ],
    'blendedbrain':
    [ 
        {
            'modulo' :0.764,
            'offset' : 0,
            'min': 0,//10.88,
            'max': 9999999,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.2, 1],
            ]
        },
        {
            'modulo' :0.764,
            'offset' : 0,
            'min': 0,//10.88,
            'max': 28.7,
            'beats' :
            [
                [1, 0, 0.1, 0.2, 0.3, 1],
                [2, 0.2, 0.3, 0.4, 0.5, 1],
                /*[2, 0, 0.05, 0.05, 0.2, 1],
                [1, 0.1, 0.15, 0.15, 0.3, 1],*/
                [101, 0.264, 0.764, 0.764, 0.764, 1],
                [102, -0.3, 0.2, 0.2, 0.2, 1],
                [102, 0.464, 0.964, 0.964, 0.964, 1],
            ]
        },
        {
            'modulo' :0.764,
            'offset' : 30.47%0.764, //90.4
            'min': 28.4,//10.88,
            'max': 90.4,
            'beats' :
            [
                [101, 0.464, 0.764, 0.764,0.764, 1],
                [1, 0, 0.1, 0.2, 0.3, 1],
                [102, 0.457, 0.957, 0.957, 0.957, 1],
                [102, -0.307, 0.193, 0.193, 0.193, 1],
                [2, 0.193, 0.293, 0.393, 0.493, 1],
                [101, 0.086, 0.386, 0.386,0.386, 1],
                [1, 0.286, 0.386, 0.486, 0.586, 1],
                
                
            ]
        },
        { 
            'modulo' :1.52866,
            'offset' : 104%1.52866,//+2, //90.4
            'min': 95,
            'max': 9999999,
            'beats' :
            [
                //[102, 1.02866, 1.52866, 1.52866, 1.52866, 1],
                [1, 0.75, 0.85, 0.95, 1.15, 1],
                //[2, 0, 0.1, 0.2, 0.4, 1],
                [101, 0.25, 0.75, 0.75, 0.75, 1],
            ]
        },
        { 
            'modulo' :1.52866,
            'offset' : 104%1.52866,//+2, //90.4
            'min': 102,
            'max': 9999999,
            'beats' :
            [
                [102, 1.02866, 1.52866, 1.52866, 1.52866, 1],
                //[1, 0.75, 0.85, 0.95, 1.15, 1],
                [2, 0, 0.1, 0.2, 0.4, 1],
                //[101, 0.25, 0.75, 0.75, 0.75, 1],
            ]
        },
    ],
    'face1':
    [ 
       
        {
            'modulo' :1.48,
            'offset' : 0,
            'min': 0,//10.88,
            'max': 9999,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.4, 1],
                [1, 0, 0.05, 0.1, 0.4, 1],
                [2, 0.185, 0.235, 0.285, 0.585, 1],
                [3, 0.37, 0.42, 0.47, 0.77, 1],
                [4, 0.555, 0.605, 0.655, 0.9055, 1],
                [5, 0.74, 0.79, 0.84, 1.14, 1],
                [6, 0.925, 0.975, 1.025, 1.325, 1],
                [7, 1.11, 1.16, 1.21, 1.48, 1],
                [8, 1.295, 1.345, 1.48, 1.48, 1],
                [8, 0, 0, 0, 0.21, 1],

                [101, 0.98, 1.48, 1.48, 1.48, 1],

                [102, -0.315, 0.185, 0.185, 0.185, 1],
                [103, -0.13, 0.37, 0.37, 0.37, 1],
                [102, 1.165, 1.665, 1.665, 1.665, 1],
                [103, 1.35, 1.85, 1.85, 1.85, 1],

                [104, 0.055, 0.555, 0.555, 0.555, 1],
                [105, 0.24, 0.74, 0.74, 0.74, 1],
                [106, 0.425, 0.925, 0.925, 0.925, 1],
                [107, 0.61, 1.11, 1.11, 1.11, 1],
                [108, 0.795, 1.295, 1.295, 1.295, 1],
            ]
        },
    ],
    'face2': 
    [ 
       
        {
            'modulo' :1.495,
            'offset' : 0.05,//12.3%1.5,
            'min': 6,//10.88,
            'max': 9999,
            'beats':
            [
                
                [1, 0, 0.05, 0.1, 0.4, 1],
                [2, 0.375, 0.425, 0.475, 0.775, 1],
                [3, 0.75, 0.8, 0.85, 1.15, 1],
                [4, 1.125, 1.175, 1.225, 1.49, 1],
                [101, 1.00, 1.5, 1.5, 1.5, 1],
                [102, -0.125, 0.375, 0.375, 0.375, 1],
                [102, 1.375, 1.875, 1.875, 1.875, 1],
                [103, 0.25, 0.75, 0.75, 0.75, 1],
                [104, 0.625, 1.125, 1.125, 1.125, 1]
            ]
        },
        {
            'modulo' :0.375,
            'offset' : 0,//12.3%1.5,
            'min': 6,//10.88,
            'max': 9999,
            'beats':
            [
                [0, 0, 0.05, 0.1, 0.2, 1],
            ]
        },
    ],
    'alien':
    [ 
       
        {
            'modulo' :1.715,
            'offset' : 10.8%1.715,
            'min': 0,//10.88,
            'max': 9999,
            'beats' :
            [
                [1, 0, 0.05, 0.1, 0.4, 1],
                [101, 1.215, 1.715, 1.715, 1.715, 1],
                [4, 0, 0.05, 0.1, 0.4, 1],
            ]
        },
        {
            'modulo' :0.42875,
            'offset' : 10.88%1.72,
            'min': 0,//10.88,
            'max': 9999,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.4, 1],
            ]
        },
    ],
    'nowloading':
    [ 
    ],
    'ending':
    [ 
    ],
    'gameover':
    [ 
    ],
    'freeflight':
    [ 
        {
            'modulo' :0.1,
            'offset' : 0,
            'min': 0,//10.88,
            'max': 19,
            'beats' :
            [
                [2, 0, 0.05, 0.05, 0.12, 1],
                [0, 0, 0.05, 0.05, 0.05, 1],
            ]
        },
        {
            'modulo' :0.35,
            'offset' : 0,
            'min': 19,
            'max': 56,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.15, 1],
                //[2, 0, 0.05, 0.1, 0.15, 1],
            ]
        },
        {
            'modulo' :0.35,
            'offset' : 0.1,
            'min': 59,//10.88,
            'max': 99999,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.2, 1],
                //[2, 0, 0.05, 0.1, 0.2, 1],
            ]
        },
        {
            'modulo' :6.53,
            'offset' : 19.83%6.53,
            'min': 19,
            'max': 59,//60,
            'beats':
            [
                [2, 0, 0.05, 0.1, 0.3, 1],
                [2, 0.4, 0.45, 0.5, 0.7, 1],
                [2, 0.8, 0.85, 0.9, 1.1, 1],
                [2, 1.2, 1.25, 1.3, 1.5, 1],
                [2, 3.25, 3.3, 3.35, 3.55, 1],
                [2, 3.65, 3.7, 3.75, 3.95, 1],
                [2, 4.05, 4.1, 4.15, 4.35, 1],
                [2, 4.25, 4.3, 4.35, 4.55, 1],

                [102, 6.23, 6.53, 6.53, 6.53, 1],
                [102, 0.1, 0.4, 0.4, 0.4, 1],
                [102, 0.5, 0.8, 0.8, 0.8, 1],
                [102, 0.9, 1.2, 1.2, 1.2, 1],
                [102, 2.95, 3.25, 3.25, 3.25, 1],
                [102, 3.35, 3.65, 3.65, 3.65, 1],
                [102, 3.75, 4.05, 4.05, 4.05, 1],
                [102, 3.95, 4.25, 4.25, 4.25, 1],

                [3, 1.6, 1.65, 1.7, 2.0, 1],
                [3, 4.85, 4.9, 4.95, 5.25, 1],
                [103, 1.1, 1.6, 1.6, 1.6, 1],
                [103, 4.35, 4.85, 4.85, 4.85, 1],
            ]
        },

        {
            'modulo' :6.53,
            'offset' : 99%6.53,
            'min': 60,//10.88,
            'max': 125,//60,
            'beats' :
            [
                [2, 0, 0.05, 0.1, 0.5, 1],
                [3, 1.65, 1.7, 1.75, 2.15, 1],
                [4, 2.45, 2.5, 2.55, 2.95, 1],

                [102, 6.03, 6.53, 6.53, 6.53, 1],
                [103, 1.15, 1.65, 1.65, 1.65, 1],
                [104, 1.95, 2.45, 2.45, 2.45, 1],
            ]
        },
        {
            'modulo' :6.53,
            'offset' : 137.3%6.53,
            'min': 137.3,//10.88,
            'max': 215,//60,
            'beats' :
            [
                [102, 6.03, 6.53, 6.53, 6.53, 1],
                [2, 0, 0.1, 0.1, 0.25, 1],
                [2, 0.2, 0.3, 0.3, 0.45, 1],
                [2, 0.4, 0.5, 0.5, 0.65, 1],
                [2, 0.6, 0.7, 0.7, 0.85, 1],
                [2, 0.8, 0.9, 0.9, 1.05, 1],
                [2, 1.0, 1.1, 1.1, 1.25, 1],
                [2, 1.2, 1.3, 1.3, 1.45, 1],
                [2, 1.4, 1.5, 1.5, 1.65, 1],

                [103, 1.13, 1.53, 1.53, 1.53, 1],
                [3, 1.63, 1.73, 1.73, 1.88, 1],
                [3, 1.83, 1.93, 1.93, 2.08, 1],
                [3, 2.03, 2.13, 2.13, 2.28, 1],
                [3, 2.23, 2.33, 2.33, 2.48, 1],
                [3, 2.43, 2.53, 2.53, 2.68, 1],
                [3, 2.63, 2.73, 2.73, 2.88, 1],
                [3, 2.83, 2.93, 2.93, 3.08, 1],
                [3, 3.03, 3.13, 3.13, 3.28, 1],

                [104, 2.76, 3.26, 3.26, 3.26, 1],
                [4, 3.26, 3.36, 3.36, 3.5, 1],
                [4, 3.46, 3.56, 3.56, 3.7, 1],
                [4, 3.66, 3.76, 3.76, 3.9, 1],
                [4, 3.86, 3.96, 3.96, 4.1, 1],
                [4, 4.06, 4.16, 4.16, 4.3, 1],
                [4, 4.26, 4.36, 4.36, 4.5, 1],
                [4, 4.46, 4.56, 4.56, 4.7, 1],
                [4, 4.66, 4.76, 4.76, 4.9, 1],

                [101, 4.4, 4.9, 4.9, 4.9, 1],
                [1, 4.9, 5, 5, 5.15, 1],
                [1, 5.1, 5.2, 5.2, 5.35, 1],
                [1, 5.3, 5.4, 5.4, 5.55, 1],
                [1, 5.5, 5.6, 5.6, 5.75, 1],
                [1, 5.7, 5.8, 5.8, 5.95, 1],
                [1, 5.9, 6, 6, 6.15, 1],
                [1, 6.1, 6.3, 6.3, 6.45, 1],
                [1, 6.3, 6.4, 6.4, 6.5, 1], 


            ]
        },


    ],
    'tutorial':
    [ 
        {
            'modulo' :2,
            'offset' : 0.0,
            'min': 0,
            'max': 9999,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.2, 1],
                [0, 1, 1.05, 1.1, 1.2, 1],
                [0, 0.5, 0.55, 0.6, 0.7, 1],
                [0, 1.5, 1.55, 1.6, 1.7, 1],
                [1, 0, 0.1, 0.2, 0.6, 1],
                [1, 0.5, 0.6, 0.7, 1.1, 1],
                [1, 1, 1.1, 1.2, 1.6, 1],
                [1, 1.5, 1.6, 1.7, 2.1, 1],
                [103, 1.5, 2, 2, 2, 1],
                [3, 0, 0.05, 0.1, 0.4, 1],
                [102, 0.5, 1, 1, 1, 1],
                [4, 0.5, 0.55, 0.6, 0.9, 1],
                [2, 1, 1.05, 1.1, 1.4, 1],
                [5, 1.5, 1.55, 1.6, 1.9, 1],
            ]
        },
    ],
    'spacespeed':
    [ 
        {
            'modulo' :0.400,
            'offset' : 0.0,
            'min': 0,
            'max': 9999,
            'beats' :
            [
                [0, 0, 0.05, 0.05, 0.3, 1],
                //[1, 0, 0.01, 0.02, 0.3, 2],
                //beatlayer, start increasing, max reached, start decreasing, back to zero, intebnsity
            ]
        },
        //first loop only
        {
            'modulo' :1.633,
            'offset' : -0,
            'min': 13.1,
            'max': 77.3,
            'beats' :
            [
                [102, 1.133, 1.633, 1.633, 1.633, 1],
                [2, 0, 0.1, 0.1, 0.6, 1],
            ]
        },
        {
            'modulo' :1.633,
            'offset' : -0.82,
            'min': 13.1,
            'max': 77.3,
            'beats' :
            [
                [103, 1.133, 1.633, 1.633, 1.633, 1],
                [3, 0, 0.1, 0.1, 0.6, 1],
            ]
        },
        {
            'modulo' :1.633,
            'offset' : -0.41,
            'min': 13.1,
            'max': 77.3,
            'beats' :
            [
                [104, 1.133, 1.633, 1.633, 1.633, 1],
                [4, 0, 0.1, 0.1, 0.6, 1],
            ]
        },
//second loop
        {
            'modulo' :1.633,
            'offset' : -0,
            'min': 91.5,
            'max': 156.6,
            'beats' :
            [
                [102, 1.133, 1.633, 1.633, 1.633, 1],
                [2, 0, 0.1, 0.1, 0.6, 1],
            ]
        },
        {
            'modulo' :1.633,
            'offset' : -0.82,
            'min': 91.5,
            'max': 156.6,
            'beats' :
            [
                [103, 1.133, 1.633, 1.633, 1.633, 1],
                [3, 0, 0.1, 0.1, 0.6, 1],
            ]
        },
        {
            'modulo' :1.633,
            'offset' : -0.41,
            'min': 91.5,
            'max': 156.6,
            'beats' :
            [
                [104, 1.133, 1.633, 1.633, 1.633, 1],
                [4, 0, 0.1, 0.1, 0.6, 1],
            ]
        }

    ],
    'greengrass':
    [ 
        {
            'modulo' :1.632,
            'offset' : 25.787%1.632,
            'min': 25,
            'max': 129,
            'beats' :
            [
                [2, 0, 0.05, 0.1, 0.4, 1],
                [3, 0, 0.05, 0.1, 0.4, 1],
                [102, 1.132, 1.632, 1.632, 1.632, 1],
                [103, 1.132, 1.632, 1.632, 1.632, 1],
                //[1, 0, 0.01, 0.02, 0.3, 2],
            ]
        },
        {
            'modulo' :0.48,
            'offset' : 25.787%0.48,
            'min': 0,
            'max': 129,
            'beats' :
            [
                [0, 0, 0.05, 0.1, 0.4, 1],
                //[1, 0, 0.01, 0.02, 0.3, 2],
            ]
        },
        {
            'modulo' :6.53,
            'offset' : -1,
            'min': 0,
            'max': 122,
            'beats' :
            [
                [101, 0.0, 0.8, 0.8, 0.8, 1],
                [1, 0.8, 2.2, 2.4, 3, 1],
                [104, 0.0, 0.8, 0.8, 0.8, 1],
                [4, 0.8, 2.2, 2.4, 3, 1]
            ]
        },
    ],
    'scarybeat':[
        {
            'modulo' :2.0,
            'offset' : -0.3,
            'min': 33,
            'max': 9999,
            'beats' :
            [
                [101, 1.5, 2, 2, 2, 1],
                [1, 0, 0.05, 0.05, 1, 1],
                //[1, 0, 0.01, 0.02, 0.3, 2],
            ]
        },
        {
            'modulo' :1.0,
            'offset' : -0.3,
            'min': 0,
            'max': 99999,
            'beats' :
            [
                [0, 0, 0.05, 0.05, 0.5, 1],
                //[1, 0, 0.01, 0.02, 0.3, 2],
            ]
        }
    ]

    
};

//+offset
function beatgenerator(time, musicname)
{
    beat=[0,0,0,0,0,0,0,0,0,0];
    prebeat=[0,0,0,0,0,0,0,0,0,0];
    
    if (music[musicname].volume()>0.3){
        for (i=0; i<rythms[musicname].length; i++)
        {
            if (rythms[musicname][i].min<=time && rythms[musicname][i].max>=time)
            {
                var buffer = rythms[musicname][i].beats; //all beats
                timecut=(time-rythms[musicname][i].offset)%rythms[musicname][i].modulo; //time

                //normal beats 1-8
                for (var j=0; j<buffer.length; j++) //go thru every entry in beats
                {    
                    if (timecut>=buffer[j][3] && timecut<buffer[j][4]){
                        if (beat[buffer[j][0]]<100){
                            beat[buffer[j][0]]+=(buffer[j][4]-timecut)/(buffer[j][4]-buffer[j][3])*buffer[j][5];
                        }
                        else{
                            prebeat[buffer[j][0]-100]+=(buffer[j][4]-timecut)/(buffer[j][4]-buffer[j][3])*buffer[j][5];
                        }
                    }
                    else if (timecut>=buffer[j][1] && timecut<buffer[j][2])
                    {
                        if (beat[buffer[j][0]]<100){
                            beat[buffer[j][0]]+=(timecut-buffer[j][1])/(buffer[j][2]-buffer[j][1])*buffer[j][5];
                        }
                        else{
                            prebeat[buffer[j][0]-100]+=(timecut-buffer[j][1])/(buffer[j][2]-buffer[j][1])*buffer[j][5];
                        }
                    }
                    else if (timecut>=buffer[j][2] && timecut<buffer[j][3]){
                        if (beat[buffer[j][0]]<100){
                        beat[buffer[j][0]]=+buffer[j][5];
                        }
                        else{
                            prebeat[buffer[j][0]-100]=+buffer[j][5];
                        }
                    }
                    
                }
            }
        }
    }
}
